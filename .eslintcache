[{"D:\\My_Code\\personal-website\\src\\index.js":"1","D:\\My_Code\\personal-website\\src\\App.js":"2","D:\\My_Code\\personal-website\\src\\components\\MainView.js":"3","D:\\My_Code\\personal-website\\src\\components\\MainPath.js":"4","D:\\My_Code\\personal-website\\src\\configures\\models.js":"5","D:\\My_Code\\personal-website\\src\\configures\\units.js":"6","D:\\My_Code\\personal-website\\src\\configures\\texts.js":"7","D:\\My_Code\\personal-website\\src\\components\\SteeringEntity.js":"8","D:\\My_Code\\personal-website\\src\\components\\Entity.js":"9","D:\\My_Code\\personal-website\\src\\components\\Character.js":"10","D:\\My_Code\\personal-website\\src\\ultis\\CloneMethods.js":"11","D:\\My_Code\\personal-website\\src\\components\\LoadingScreen.js":"12","D:\\My_Code\\personal-website\\src\\components\\StartScreen.js":"13","D:\\My_Code\\personal-website\\src\\ultis\\TextLoader.js":"14","D:\\My_Code\\personal-website\\src\\ultis\\CustomGLTFLoader.js":"15","D:\\My_Code\\personal-website\\src\\configures\\loading_models.js":"16","D:\\My_Code\\personal-website\\src\\configures\\loading_units.js":"17","D:\\My_Code\\personal-website\\src\\configures\\loading_roads.js":"18"},{"size":219,"mtime":1608902422560,"results":"19","hashOfConfig":"20"},{"size":288,"mtime":1609076164004,"results":"21","hashOfConfig":"20"},{"size":14776,"mtime":1611761799423,"results":"22","hashOfConfig":"20"},{"size":141,"mtime":1608971479411,"results":"23","hashOfConfig":"20"},{"size":2842,"mtime":1610959285569,"results":"24","hashOfConfig":"20"},{"size":6406,"mtime":1610959681890,"results":"25","hashOfConfig":"20"},{"size":7848,"mtime":1611225000031,"results":"26","hashOfConfig":"20"},{"size":3878,"mtime":1610537802550,"results":"27","hashOfConfig":"20"},{"size":1490,"mtime":1610459838443,"results":"28","hashOfConfig":"20"},{"size":1980,"mtime":1610459858125,"results":"29","hashOfConfig":"20"},{"size":2358,"mtime":1610723231807,"results":"30","hashOfConfig":"20"},{"size":607,"mtime":1610958961183,"results":"31","hashOfConfig":"20"},{"size":5604,"mtime":1611841551513,"results":"32","hashOfConfig":"20"},{"size":1346,"mtime":1610983202299,"results":"33","hashOfConfig":"20"},{"size":5384,"mtime":1611513870483,"results":"34","hashOfConfig":"20"},{"size":902,"mtime":1611521412662,"results":"35","hashOfConfig":"20"},{"size":3406,"mtime":1611590592811,"results":"36","hashOfConfig":"20"},{"size":96802,"mtime":1611841506033,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"19qlbtb",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\My_Code\\personal-website\\src\\index.js",[],["76","77"],"D:\\My_Code\\personal-website\\src\\App.js",[],"D:\\My_Code\\personal-website\\src\\components\\MainView.js",["78","79"],"import { useEffect } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nimport { MODELS } from '../configures/models';\r\nimport { UNITS } from '../configures/units';\r\nimport {LOADING_MODELS} from '../configures/loading_models';\r\nimport {LOADING_UNITS} from '../configures/loading_units';\r\nimport { TEXTS_INTRO,TEXTS_AWARD } from '../configures/texts';\r\nimport { StartScreen } from './StartScreen';\r\nimport { LoadingScreen } from './LoadingScreen';\r\n\r\nimport { TextLoader } from '../ultis/TextLoader';\r\nimport { CustomGLTFLoader, InitiateUnits, ChangeAnimation} from '../ultis/CustomGLTFLoader';\r\n\r\nconst MainView = (src) => {\r\n    useEffect(() => {\r\n        var worldScene,camera,renderer,clock;\r\n        var groundMesh;\r\n        var mixers = [];\r\n        var Obstacles = [], SteeringEntities = [], mainCharacteres = [], fishes = [];\r\n        var boundingGround,boundingSky,boundingSea,mainCharacter;\r\n        var RESOURCES_LOADED = false, START_RENDERING = false;\r\n        var loadingManager,loader;\r\n        var passingObj = {\r\n            scene : null,\r\n            objects : null\r\n        };\r\n\r\n        const InitLoadingScene = () => {\r\n            loadingManager = new THREE.LoadingManager();\r\n\r\n            loadingManager.onLoad = () => {\r\n                var passingObjMain = {\r\n                    MODELS : MODELS,\r\n                    UNITS : UNITS,\r\n                    worldScene : worldScene,\r\n                    loadingManager : loadingManager,\r\n                    SteeringEntities : SteeringEntities,\r\n                    mainCharacteres : mainCharacteres,\r\n                    Obstacles : Obstacles,\r\n                    mixers : mixers\r\n                }\r\n                \r\n                InitiateUnits(passingObjMain);\r\n\r\n                mainCharacter = mainCharacteres[0];\r\n            }\r\n\r\n            StartScreen.loadingManager.onLoad = () => {\r\n\r\n                var passingObjMain = {\r\n                    MODELS : LOADING_MODELS,\r\n                    UNITS : LOADING_UNITS,\r\n                    worldScene : StartScreen.scene,\r\n                    loadingManager : StartScreen.loadingManager,\r\n                    SteeringEntities : StartScreen.SteeringEntities,\r\n                    mainCharacteres : StartScreen.mainCharacteres,\r\n                    Obstacles : StartScreen.Obstacles,\r\n                    mixers : StartScreen.mixers\r\n                }\r\n                \r\n                InitiateUnits(passingObjMain);\r\n\r\n                RESOURCES_LOADED = true;\r\n            }\r\n        }\r\n\r\n        const InitScene = () => {\r\n            //worldScene\r\n            worldScene = new THREE.Scene();\r\n            worldScene.background = new THREE.Color(0xDDFFFD);\r\n\r\n            //camera\r\n            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 100);\r\n            //camera.position.set(0, 1, 3);\r\n            camera.position.set(0, 10, 13);\r\n            //camera.lookAt(10,1,3);\r\n            camera.lookAt(worldScene.position);\r\n\r\n            //light \r\n            const HemisphereLight = new THREE.HemisphereLight( 0xFFF6DD, 0x05050C, 1.1 );\r\n            worldScene.add(HemisphereLight);\r\n\r\n            const sunLight = new THREE.DirectionalLight(0xFEE8C9, 0.5);\r\n            sunLight.position.set(-7,10,-7);\r\n            sunLight.target.position.set(0,0,0);\r\n            sunLight.castShadow = true;\r\n            sunLight.shadow.mapSize.width = 4096;\r\n            sunLight.shadow.mapSize.height = 4096;\r\n            sunLight.shadow.camera.top = 20;\r\n\t\t\tsunLight.shadow.camera.bottom = - 20;\r\n\t\t\tsunLight.shadow.camera.left = - 20;\r\n\t\t\tsunLight.shadow.camera.right = 20;\r\n\t\t\tsunLight.shadow.camera.near = 0.1;\r\n\t\t\tsunLight.shadow.camera.far = 100;\r\n            worldScene.add(sunLight);\r\n\r\n            //clock \r\n            clock = new THREE.Clock()\r\n\r\n            //loader text\r\n            loader = new THREE.FontLoader( loadingManager );\r\n            /*\r\n            //Oxyz\r\n            const lineMatX = new THREE.LineBasicMaterial({color: 0xFF0000}); //red\r\n            const lineMatY = new THREE.LineBasicMaterial({color: 0xABFF00}); //green\r\n            const lineMatZ = new THREE.LineBasicMaterial({color: 0x0016FF}); //blue\r\n            const pointO = new THREE.Vector3(0,0,0);\r\n\r\n            const pointsX = [];\r\n            pointsX.push(pointO);\r\n            pointsX.push(new THREE.Vector3(10,0,0));\r\n            const lineGeoX = new THREE.BufferGeometry().setFromPoints(pointsX);\r\n\r\n            const pointsY = [];\r\n            pointsY.push(pointO);\r\n            pointsY.push(new THREE.Vector3(0,10,0));\r\n            const lineGeoY = new THREE.BufferGeometry().setFromPoints(pointsY);\r\n\r\n            const pointsZ = [];\r\n            pointsZ.push(pointO);\r\n            pointsZ.push(new THREE.Vector3(0,0,10));\r\n            const lineGeoZ = new THREE.BufferGeometry().setFromPoints(pointsZ); \r\n\r\n            const Ox = new THREE.Line(lineGeoX, lineMatX);\r\n            const Oy = new THREE.Line(lineGeoY, lineMatY);\r\n            const Oz = new THREE.Line(lineGeoZ, lineMatZ);\r\n            worldScene.add(Ox);\r\n            worldScene.add(Oy);\r\n            worldScene.add(Oz);\r\n            */\r\n            //ground \r\n            const groundGeo = new THREE.PlaneBufferGeometry(20,12);\r\n            const groundMat = new THREE.MeshPhongMaterial({ color: 0x6D3E05});\r\n            groundMesh = new THREE.Mesh(groundGeo,groundMat);\r\n            groundMesh.rotation.x = -Math.PI/2;\r\n            groundMesh.position.z += 4;\r\n            groundMesh.receiveShadow = true;\r\n            worldScene.add(groundMesh);\r\n\r\n            boundingGround = new THREE.Box3(new THREE.Vector3(-8.5,0,-1), new THREE.Vector3(8.5,0,8.5));\r\n            boundingSky = new THREE.Box3(new THREE.Vector3(-10,0,-5), new THREE.Vector3(3,0,3));\r\n            boundingSea = new THREE.Box3(new THREE.Vector3(-9,0,-15), new THREE.Vector3(9,0,-3));\r\n\r\n            passingObj = {\r\n                scene : worldScene,\r\n                objects : Obstacles\r\n            }\r\n\r\n            //text\r\n            for (let i=0; i<TEXTS_INTRO.length; i++) {\r\n                TextLoader(loader, TEXTS_INTRO[i],'./fonts/Sketch_3D_Regular.json', 0xF0E1D1, passingObj);\r\n            }\r\n\r\n            for (let i=0; i<TEXTS_AWARD.length; i++) {\r\n                TextLoader(loader, TEXTS_AWARD[i],'./fonts/Bakso.json', 0xBF0303, passingObj);\r\n            }\r\n\r\n            //window events\r\n            window.addEventListener('resize', onWindowResize, false);\r\n\r\n        }\r\n        \r\n        const InitRenderer = () => {\r\n            //renderer\r\n            renderer = new THREE.WebGLRenderer({ antialias: true});\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n            renderer.setPixelRatio(window.devicePixelRatio);\r\n            renderer.shadowMap.enabled = true;\r\n            renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n            renderer.gammaOutput = true;\r\n            document.getElementById(src).appendChild(renderer.domElement);\r\n        }\r\n\r\n        const loadModels = () => {\r\n            var passingObjMain = {\r\n                MODELS : MODELS,\r\n                UNITS : UNITS,\r\n                worldScene : worldScene,\r\n                loadingManager : loadingManager,\r\n                SteeringEntities : SteeringEntities,\r\n                mainCharacter : mainCharacter,\r\n                Obstacles : Obstacles,\r\n                mixers : mixers\r\n            }\r\n    \r\n            CustomGLTFLoader(passingObjMain);\r\n            \r\n        }\r\n\r\n        const gameLogic = () => {\r\n\r\n            if (mainCharacter) {\r\n                mainCharacter.update();\r\n            }\r\n\r\n            for (let i=0;i<SteeringEntities.length;i++) {\r\n                var unit = SteeringEntities[i];\r\n                if (unit.name.includes('fish_')) fishes.push(unit);\r\n            }\r\n\r\n            for (let i=0;i<SteeringEntities.length;i++) {\r\n                var steeringObj = SteeringEntities[i];\r\n                if (steeringObj.name === 'cat') {\r\n                    steeringObj.wander(boundingGround);\r\n                    if (Obstacles.length > 0) steeringObj.avoid(Obstacles);\r\n                    if (mainCharacter!==null) steeringObj.avoid(mainCharacter);\r\n                    if (mainCharacter!==null) steeringObj.evade(mainCharacter);\r\n                    steeringObj.lookWhereGoing();\r\n                    steeringObj.bounce(boundingGround);\r\n                }\r\n\r\n                if (steeringObj.name.includes('fish_')) {\r\n                    steeringObj.wander(boundingSea);\r\n                    if (fishes.length > 0) steeringObj.avoid(fishes);\r\n                    steeringObj.lookWhereGoing();\r\n                    steeringObj.bounce(boundingSea);\r\n                }\r\n                \r\n                if (steeringObj.name === 'cloud') {\r\n                    steeringObj.wander(boundingSky);\r\n                    steeringObj.bounce(boundingSky);\r\n                }\r\n                steeringObj.update();\r\n            }\r\n        }\r\n\r\n        var dt = 1000/60;\r\n        var timetarget = 0;\r\n        var beenMouseover = false;\r\n\r\n        const AnimateStartScreen = () => {\r\n            requestAnimationFrame(animate);\r\n            /*\r\n            const mixerUpdateDelta = clock.getDelta();\r\n\r\n            for (let i=0; i<StartScreen.mixers.length; i++) {\r\n                StartScreen.mixers[i].mixer.update(mixerUpdateDelta);\r\n            }\r\n\r\n\r\n            var truckObject = StartScreen.SteeringEntities[0];\r\n\r\n            if (StartScreen.intersect !== null) {\r\n                if (StartScreen.raycasterObjects[0] !== undefined) StartScreen.raycasterObjects[0].visible = false;\r\n                if (StartScreen.invisibleObj[0] !== undefined) StartScreen.invisibleObj[0].visible = true;\r\n                setTimeout(() => {\r\n                    StartScreen.scene.remove.apply(StartScreen.scene, StartScreen.scene.children);\r\n                    START_RENDERING = true;\r\n                }, 2000);\r\n                if (!beenMouseover) {\r\n                    let passingObjMain = {\r\n                        MODELS : LOADING_MODELS,\r\n                        UNITS : LOADING_UNITS,\r\n                        worldScene : StartScreen.scene,\r\n                        loadingManager : StartScreen.loadingManager,\r\n                        SteeringEntities : StartScreen.SteeringEntities,\r\n                        mainCharacteres : StartScreen.mainCharacteres,\r\n                        Obstacles : StartScreen.Obstacles,\r\n                        mixers : StartScreen.mixers\r\n                    }\r\n\r\n                    ChangeAnimation(passingObjMain,truckObject,'Scene');\r\n                    beenMouseover = true;\r\n                }\r\n\r\n            } else {\r\n                if (StartScreen.raycasterObjects[0] !== undefined) StartScreen.raycasterObjects[0].visible = true;\r\n                if (StartScreen.invisibleObj[0] !== undefined) StartScreen.invisibleObj[0].visible = false;\r\n\r\n                if (beenMouseover) {\r\n                    let passingObjMain = {\r\n                        MODELS : LOADING_MODELS,\r\n                        UNITS : LOADING_UNITS,\r\n                        worldScene : StartScreen.scene,\r\n                        loadingManager : StartScreen.loadingManager,\r\n                        SteeringEntities : StartScreen.SteeringEntities,\r\n                        mainCharacteres : StartScreen.mainCharacteres,\r\n                        Obstacles : StartScreen.Obstacles,\r\n                        mixers : StartScreen.mixers\r\n                    }\r\n                    ChangeAnimation(passingObjMain,truckObject,null);\r\n                    beenMouseover = false;\r\n                }\r\n            }\r\n            */\r\n            renderer.render(StartScreen.scene, StartScreen.camera);\r\n        }\r\n\r\n        const AnimateLoadingScreen = () => {\r\n            requestAnimationFrame(animate);\r\n            renderer.render(LoadingScreen.scene, LoadingScreen.camera);\r\n        }\r\n\r\n        const animate = () => {\r\n            if (RESOURCES_LOADED === false) {\r\n                AnimateLoadingScreen();\r\n                return;\r\n            }\r\n\r\n            if (START_RENDERING === false) {\r\n                AnimateStartScreen();\r\n                return;\r\n            }\r\n\r\n            if (Date.now() >= timetarget) {\r\n\r\n                const mixerUpdateDelta = clock.getDelta();\r\n\r\n                for (let i=0; i<mixers.length; i++) {\r\n                    mixers[i].mixer.update(mixerUpdateDelta);\r\n                }\r\n\r\n                gameLogic();\r\n                \r\n                renderer.render(worldScene, camera);\r\n\r\n                timetarget += dt;\r\n                if (Date.now() >= timetarget) {\r\n                    timetarget = Date.now();\r\n                }\r\n            }\r\n            requestAnimationFrame(animate);\r\n        }\r\n\r\n        const onWindowResize = () => {\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            camera.updateProjectionMatrix();\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n        }\r\n\r\n        const onPushKeyboard = (event) => {\r\n            var keyName = event.key;\r\n            //console.log(keyName);\r\n            if (keyName === 'w') {\r\n                mainCharacter.moveUp();\r\n            } else if (keyName === 's') {\r\n                mainCharacter.moveDown();\r\n            } else if (keyName === 'a') {\r\n                mainCharacter.moveLeft();\r\n            } else if (keyName === 'd') {\r\n                mainCharacter.moveRight();\r\n            }\r\n            \r\n        }\r\n\r\n        const onReleaseKeyboard = (event) => {\r\n            var keyName = event.key;\r\n            //console.log(keyName);\r\n            if (keyName === 'w') {\r\n                mainCharacter.unMoveUp();\r\n            } else if (keyName === 's') {\r\n                mainCharacter.unMoveDown();\r\n            } else if (keyName === 'a') {\r\n                mainCharacter.unMoveLeft();\r\n            } else if (keyName === 'd') {\r\n                mainCharacter.unMoveRight();\r\n            }\r\n        }\r\n\r\n        const onPressKeyboard = (event) => {\r\n            var keyName = event.key;\r\n            if (keyName === ' ') {\r\n                mainCharacter.jumpUp();\r\n            }\r\n        }\r\n\r\n\r\n        //main prog\r\n\r\n        InitScene(); \r\n        InitRenderer();\r\n        InitLoadingScene();\r\n        loadModels();\r\n        animate();\r\n        document.addEventListener('keydown',onPushKeyboard,false);\r\n        document.addEventListener('keyup',onReleaseKeyboard,false);\r\n        document.addEventListener('keypress',onPressKeyboard,false);\r\n        //console.log(worldScene.children);\r\n        return () => {\r\n            document.getElementById(src).removeChild(renderer.domElement);\r\n        }\r\n    }, [src])\r\n}\r\n\r\nexport default MainView;","D:\\My_Code\\personal-website\\src\\components\\MainPath.js",[],"D:\\My_Code\\personal-website\\src\\configures\\models.js",[],"D:\\My_Code\\personal-website\\src\\configures\\units.js",[],"D:\\My_Code\\personal-website\\src\\configures\\texts.js",[],"D:\\My_Code\\personal-website\\src\\components\\SteeringEntity.js",[],"D:\\My_Code\\personal-website\\src\\components\\Entity.js",[],"D:\\My_Code\\personal-website\\src\\components\\Character.js",[],"D:\\My_Code\\personal-website\\src\\ultis\\CloneMethods.js",[],"D:\\My_Code\\personal-website\\src\\components\\LoadingScreen.js",[],"D:\\My_Code\\personal-website\\src\\components\\StartScreen.js",[],"D:\\My_Code\\personal-website\\src\\ultis\\TextLoader.js",[],"D:\\My_Code\\personal-website\\src\\ultis\\CustomGLTFLoader.js",[],"D:\\My_Code\\personal-website\\src\\configures\\loading_models.js",[],"D:\\My_Code\\personal-website\\src\\configures\\loading_units.js",[],"D:\\My_Code\\personal-website\\src\\configures\\loading_roads.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":13,"column":43,"nodeType":"86","messageId":"87","endLine":13,"endColumn":58},{"ruleId":"84","severity":1,"message":"88","line":230,"column":13,"nodeType":"86","messageId":"87","endLine":230,"endColumn":26},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'ChangeAnimation' is defined but never used.","Identifier","unusedVar","'beenMouseover' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]